# Copyright The Zephyr Project Contributors
# SPDX-License-Identifier: Apache-2.0

# zephyr-keep-sorted-start
add_subdirectory(adi)
add_subdirectory(amd)
add_subdirectory(ams)
add_subdirectory(aosong)
add_subdirectory(ap)
add_subdirectory(asahi_kasei)
add_subdirectory(atmel)
add_subdirectory(avago)
add_subdirectory(bosch)
add_subdirectory(broadcom)
add_subdirectory(dfrobot)
add_subdirectory(ene)
add_subdirectory(espressif)
add_subdirectory(everlight)
add_subdirectory(festo)
add_subdirectory(fintek)
add_subdirectory(generic)
add_subdirectory(gss)
add_subdirectory(hamamatsu)
add_subdirectory(honeywell)
add_subdirectory(hoperf)
add_subdirectory(hzgrow)
add_subdirectory(infineon)
add_subdirectory(isentek)
add_subdirectory(ist)
add_subdirectory(ite)
add_subdirectory(jedec)
add_subdirectory(liteon)
add_subdirectory(maxbotix)
add_subdirectory(maxim)
add_subdirectory(meas)
add_subdirectory(melexis)
add_subdirectory(memsic)
add_subdirectory(microchip)
add_subdirectory(nordic)
add_subdirectory(nuvoton)
add_subdirectory(nxp)
add_subdirectory(onsemi)
add_subdirectory(panasonic)
add_subdirectory(peacefair)
add_subdirectory(phosense)
add_subdirectory(pixart)
add_subdirectory(plantower)
add_subdirectory(pni)
add_subdirectory(raspberrypi)
add_subdirectory(realtek)
add_subdirectory(renesas)
add_subdirectory(rohm)
add_subdirectory(sbs)
add_subdirectory(sciosense)
add_subdirectory(seeed)
add_subdirectory(semtech)
add_subdirectory(sensirion)
add_subdirectory(silabs)
add_subdirectory(st)
add_subdirectory(tdk)
add_subdirectory(ti)
add_subdirectory(vishay)
add_subdirectory(winsen)
add_subdirectory(wsen)
# zephyr-keep-sorted-stop

zephyr_syscall_header(${ZEPHYR_BASE}/include/zephyr/drivers/sensor.h)

zephyr_library()
zephyr_library_property(ALLOW_EMPTY TRUE)

zephyr_library_sources_ifdef(CONFIG_USERSPACE sensor_handlers.c)
zephyr_library_sources_ifdef(CONFIG_SENSOR_SHELL sensor_shell.c)
zephyr_library_sources_ifdef(CONFIG_SENSOR_SHELL_STREAM sensor_shell_stream.c)
zephyr_library_sources_ifdef(CONFIG_SENSOR_SHELL_BATTERY shell_battery.c)
zephyr_library_sources_ifdef(CONFIG_SENSOR_ASYNC_API sensor_decoders_init.c default_rtio_sensor.c)

dt_has_chosen(has_zephyr_sensor_clock PROPERTY "zephyr,sensor-clock")

if(CONFIG_SENSOR_CLOCK_RTC OR CONFIG_SENSOR_CLOCK_COUNTER)
  if(has_zephyr_sensor_clock)
    zephyr_library_sources(sensor_clock_external.c)
  else()
    message(FATAL_ERROR "Sensor clock type (RTC or Counter) is selected, but no zephyr,sensor-clock is defined in the device tree.")
  endif()
elseif(CONFIG_SENSOR_CLOCK_SYSTEM)
  zephyr_library_sources(sensor_clock_sys.c)
endif()
